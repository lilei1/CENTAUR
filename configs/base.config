/*
 * CENTAUR Pipeline Configuration
 * Base configuration with common settings
 */

// Global parameters
params {
    // Input data
    input_dir = "$baseDir/data/raw"
    sample_sheet = "$baseDir/data/sample_sheet.csv"
    
    // Reference files
    genome_fasta = "$baseDir/references/hg38.fa"
    genome_index = "$baseDir/references/hg38"
    annotation_gtf = "$baseDir/references/hg38.gtf"
    target_intervals = "$baseDir/references/exome_targets.bed"
    annotation_db = "$baseDir/references/annovar_db"
    
    // Output directory
    output_dir = "$baseDir/data/results"
    
    // Processing parameters
    methylation_coverage = 20
    rnaseq_reads = 50
    wes_coverage = 30
    
    // Multi-omics integration
    dmr_fdr_threshold = 0.05
    methylation_diff_threshold = 20
    tmb_threshold = 10
    
    // Resource allocation
    max_cpus = 16
    max_memory = '64.GB'
    max_time = '24.h'
    
    // Help information
    help = false
}

// Process configuration
process {
    // Default resource allocation
    cpus = 4
    memory = '8.GB'
    time = '2.h'
    
    // Error handling
    errorStrategy = 'retry'
    maxRetries = 3
    
    // Publish directory
    publishDir = [
        path: params.output_dir,
        mode: 'copy',
        saveAs: { filename -> filename }
    ]
}

// Execution configuration
executor {
    name = 'local'
    queueSize = 10
}

// Workflow configuration
workflow {
    onComplete = 'echo "CENTAUR pipeline completed successfully!"'
    onError = 'echo "CENTAUR pipeline failed!"'
}

// Environment variables
env {
    PATH = '/usr/local/bin:/usr/bin:/bin'
    PYTHONPATH = '/usr/local/lib/python3.8/site-packages'
}

// Docker configuration
docker {
    enabled = true
    user = false
    runOptions = '--rm -u $(id -u):$(id -g)'
}

// Singularity configuration
singularity {
    enabled = false
    autoMounts = true
    cacheDir = '/tmp/singularity'
}

// Conda configuration
conda {
    enabled = false
    cacheDir = '/tmp/conda'
}

// Environment modules
modules {
    enabled = false
}
