/*
 * CENTAUR Pipeline Configuration
 * AWS Batch execution configuration
 */

process {
    // Resource allocation
    cpus = 8
    memory = '16.GB'
    time = '4.h'
    
    // Error handling
    errorStrategy = 'retry'
    maxRetries = 3
    
    // Specific process configurations
    withName: 'QUALITY_CONTROL_METHYLATION' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'ALIGN_METHYLATION' {
        cpus = 16
        memory = '32.GB'
        time = '8.h'
    }
    
    withName: 'CALL_METHYLATION' {
        cpus = 8
        memory = '16.GB'
        time = '4.h'
    }
    
    withName: 'EXTRACT_FRAGMENTOMICS' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'QUALITY_CONTROL_RNA' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'ALIGN_RNA' {
        cpus = 16
        memory = '32.GB'
        time = '8.h'
    }
    
    withName: 'QUANTIFY_GENES' {
        cpus = 8
        memory = '16.GB'
        time = '4.h'
    }
    
    withName: 'NORMALIZE_EXPRESSION' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'DIFFERENTIAL_EXPRESSION' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'CALCULATE_IMMUNE_SIGNATURES' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'CALL_SOMATIC_VARIANTS' {
        cpus = 16
        memory = '64.GB'
        time = '16.h'
    }
    
    withName: 'ANNOTATE_VARIANTS' {
        cpus = 8
        memory = '16.GB'
        time = '4.h'
    }
    
    withName: 'CALCULATE_TMB' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'ANALYZE_CNV' {
        cpus = 8
        memory = '16.GB'
        time = '4.h'
    }
    
    withName: 'HARMONIZE_SAMPLE_DATA' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'EXTRACT_BIOMARKER_FEATURES' {
        cpus = 8
        memory = '16.GB'
        time = '4.h'
    }
    
    withName: 'CREATE_FEATURE_MATRIX' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
    
    withName: 'PERFORM_DIMENSIONALITY_REDUCTION' {
        cpus = 8
        memory = '16.GB'
        time = '4.h'
    }
    
    withName: 'GENERATE_FINAL_FEATURES' {
        cpus = 4
        memory = '8.GB'
        time = '2.h'
    }
}

// Execution configuration
executor {
    name = 'awsbatch'
    queueSize = 100
    submitRateLimit = '10/1min'
}

// AWS Batch configuration
aws {
    region = 'us-east-1'
    batch {
        cliPath = '/usr/local/bin/aws'
        jobDefinition = 'centaur-pipeline'
        jobQueue = 'centaur-queue'
        jobRole = 'arn:aws:iam::your-account:role/centaur-batch-role'
        volumes = ['/data:/data']
        maxParallelJobs = 100
        maxJobAttempts = 3
        maxJobDuration = '24h'
    }
    s3 {
        uploadRetries = 3
        maxConcurrentTransfers = 10
        maxTransferAttempts = 3
    }
}

// Workflow configuration
workflow {
    onComplete = 'echo "CENTAUR pipeline completed successfully!"'
    onError = 'echo "CENTAUR pipeline failed!"'
}

// Environment variables
env {
    PATH = '/usr/local/bin:/usr/bin:/bin'
    PYTHONPATH = '/usr/local/lib/python3.8/site-packages'
    AWS_DEFAULT_REGION = 'us-east-1'
    AWS_BATCH_JOB_QUEUE = 'centaur-queue'
    AWS_BATCH_JOB_DEFINITION = 'centaur-pipeline'
}

// Docker configuration
docker {
    enabled = true
    user = false
    runOptions = '--rm -u $(id -u):$(id -g)'
    registry = 'your-account.dkr.ecr.us-east-1.amazonaws.com'
}

// Singularity configuration
singularity {
    enabled = false
}

// Conda configuration
conda {
    enabled = false
}

// Environment modules
modules {
    enabled = false
}

// Cloud configuration
cloud {
    enabled = true
    provider = 'aws'
    region = 'us-east-1'
    instanceType = 'm5.large'
    spotPrice = '0.05'
    maxInstances = 10
    minInstances = 1
    autoScale = true
}
